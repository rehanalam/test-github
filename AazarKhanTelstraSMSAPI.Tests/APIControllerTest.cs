/*
 * AazarKhanTelstraSMSAPI.Tests
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Threading.Tasks;
using Newtonsoft.Json.Converters;
using AazarKhanTelstraSMSAPI.PCL;
using AazarKhanTelstraSMSAPI.PCL.Utilities; 
using AazarKhanTelstraSMSAPI.PCL.Http.Client;
using AazarKhanTelstraSMSAPI.PCL.Http.Response;
using AazarKhanTelstraSMSAPI.Tests.Helpers;
using NUnit.Framework;
using AazarKhanTelstraSMSAPI.PCL;
using AazarKhanTelstraSMSAPI.PCL.Controllers;
using AazarKhanTelstraSMSAPI.PCL.Exceptions;

namespace AazarKhanTelstraSMSAPI.Tests
{
    [TestFixture]
    public class APIControllerTest : ControllerTestBase
    {
        /// <summary>
        /// Controller instance (for all tests)
        /// </summary>
        private static APIController controller;

        /// <summary>
        /// Setup test class
        /// </summary>
        [SetUp]
        public static void SetUpClass()
        {
            controller = GetClient().Client;
        }

        /// <summary>
        /// The Send SMS method sends an SMS message to a single Australian mobile phone number. A unique identifier (messageId) returned in the response, which may be used to query for the delivery status of the message. 
        /// </summary>
        [Test]
        public async Task TestSendSMS1() 
        {
            // Parameters for the API call
            PCL.Models.SendSMSToBodyObject body = APIHelper.JsonDeserialize<PCL.Models.SendSMSToBodyObject>("{  \"to\": \"\",  \"body\": \"\"}");

            // Perform API call
            PCL.Models.SendSMSResponse result = null;

            try
            {
                result = await controller.CreateSendSMSAsync(body);
            }
            catch(APIException) {};

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Content-Type", null);

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

            // Test whether the captured response is as we expected
            Assert.IsNotNull(result, "Result should exist");

            Assert.AreEqual("{  \"messageId\": \"\"}", 
                    TestHelper.ConvertStreamToString(httpCallBackHandler.Response.RawBody),
                    "Response body should match exactly (string literal match)");
        }

        /// <summary>
        /// Use the unique identifier (messageId) returned as returned in the response from the Send SMS method to get the status. 
        /// </summary>
        [Test]
        public async Task TestGetMessageStatus1() 
        {

            // Perform API call
            PCL.Models.GetMessageStatusResponse result = null;

            try
            {
                result = await controller.GetMessageStatusAsync();
            }
            catch(APIException) {};

            // Test response code
            Assert.AreEqual(200, httpCallBackHandler.Response.StatusCode,
                    "Status should be 200");

            // Test headers
            Dictionary<string, string> headers = new Dictionary<string, string>();
            headers.Add("Content-Type", null);

            Assert.IsTrue(TestHelper.AreHeadersProperSubsetOf (
                    headers, httpCallBackHandler.Response.Headers),
                    "Headers should match");

            // Test whether the captured response is as we expected
            Assert.IsNotNull(result, "Result should exist");

            Assert.AreEqual("{  \"to\": \"\",  \"receivedTimestamp\": \"\",  \"sentTimestamp\": \"\",  \"status\": \"\"}", 
                    TestHelper.ConvertStreamToString(httpCallBackHandler.Response.RawBody),
                    "Response body should match exactly (string literal match)");
        }

    }
}